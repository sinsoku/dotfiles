call plug#begin('~/.vim/plugged')
" plugins
Plug 'scrooloose/syntastic'
Plug 'thinca/vim-visualstar'
Plug 'tomtom/tcomment_vim'
Plug 'vim-jp/vimdoc-ja'

" lang
Plug 'elixir-lang/vim-elixir'
Plug 'slim-template/vim-slim'
Plug 'hashivim/vim-terraform'

" colorscheme
Plug 'rainux/vim-desert-warm-256'
call plug#end()

set helplang=ja
syntax on
set number
set nowrap
set ruler
set wildmenu
set foldlevel=0
set clipboard+=unnamed,unnamedplus
set laststatus=2
set hlsearch
set showcmd
set showmode
set noswapfile
set autoread
set display=uhex
set autoindent
set smartindent
set cindent
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=0
set backspace=indent,eol,start
set t_Co=256
autocmd ColorScheme * call s:highlight_settings()
function! s:highlight_settings()
  for name in ["Normal", "NonText", "LineNr"]
    execute "highlight " . name . " ctermfg=231 ctermbg=none"
  endfor
endfunction
colorscheme desert-warm-256

" visualstar
nnoremap * *N
nnoremap # #N
map * <Plug>(visualstar-*)N
map # <Plug>(visualstar-#)N

" .vimrc を編集しやすくする
nnoremap <Space>. :<C-u>edit $MYVIMRC<Enter>
nnoremap <Space>s. :<C-u>source $MYVIMRC<Enter>
nnoremap <C-h> :<C-u>help<Space><C-r><C-w><Enter>

" whitespaceEOL on highlight
highlight WhitespaceEOL ctermbg=red guibg=red
autocmd BufWinEnter * let w:m1 = matchadd("WhitespaceEOL", '\s\+$')
autocmd WinEnter * let w:m1 = matchadd("WhitespaceEOL", '\s\+$')

" tabstring on highlight
highlight TabString ctermbg=red guibg=red
autocmd BufWinEnter * let w:m2 = matchadd("TabString", '^\t+')
autocmd WinEnter * let w:m2 = matchadd("TabString", '^\t+')

" JpSpace on underline
highlight ZenkakuSpace cterm=underline ctermbg=red guibg=red
autocmd BufWinEnter * let w:m3 = matchadd("ZenkakuSpace", '　')
autocmd WinEnter * let w:m3 = matchadd("ZenkakuSpace", '　')

" auto-mkdir
augroup vimrc-auto-mkdir  " {{{
  autocmd!
  autocmd BufWritePre * call s:auto_mkdir(expand('<afile>:p:h'))
  function! s:auto_mkdir(dir)  " {{{
    if !isdirectory(a:dir)
      call mkdir(iconv(a:dir, &encoding, &termencoding), 'p')
    endif
  endfunction  " }}}
augroup END  " }}}

" markdown syntax
autocmd BufRead,BufNewFile *.md set filetype=markdown

" j, k による移動を折り返されたテキストでも自然に振る舞うように変更
nnoremap j gj
nnoremap k gk

" ect を html シンタックスにする
autocmd BufRead,BufNewFile *.ect set filetype=html

" Vagrantfile を Ruby シンタックスにする
autocmd BufRead,BufNewFile Vagrantfile set filetype=ruby
